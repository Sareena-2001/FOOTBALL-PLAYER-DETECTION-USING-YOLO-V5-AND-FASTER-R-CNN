# -*- coding: utf-8 -*-
"""TASK 3:DETECTING FOOTBALL PLAYERS USING YOLO V5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DQtMIbO0e4oZ_XWXvuvybLl6_Cb0VNu4
"""

from google.colab import drive

drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# Clone YOLOv5 repository
!git clone https://github.com/ultralytics/yolov5
# %cd yolov5

# Install dependencies
!pip install -r requirements.txt

!python train.py --img-size 640 --batch-size 16 --epochs 100 --data /content/drive/MyDrive/football_players_detection/data.yaml --weights yolov5x.pt --name custom_model

import cv2
import torch
from IPython.display import display
from PIL import Image as PILImage

# Load a larger YOLOv5 model
model = torch.hub.load('ultralytics/yolov5', 'yolov5x')  # Use 'yolov5s', 'yolov5m', 'yolov5l', or 'yolov5x'

# Path to your video
video_path = '/content/drive/MyDrive/football_players_detection/match.mp4'

# Load the video
cap = cv2.VideoCapture(video_path)

# Confidence threshold for displaying detections
confidence_threshold = 0.9  # Adjust to see if it improves results

# Process the video frame by frame
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Perform object detection
    results = model(frame)

    # Filter detections based on confidence threshold
    detections = results.pandas().xyxy[0]
    filtered_detections = detections[detections['confidence'] >= confidence_threshold]

    # Print filtered detections with probabilities
    print(filtered_detections[['xmin', 'ymin', 'xmax', 'ymax', 'confidence', 'name']])

    # Render results on the frame
    frame_with_results = results.render()[0]

    # Convert frame with results to PIL Image format for displaying in Jupyter notebook
    frame_with_results = cv2.cvtColor(frame_with_results, cv2.COLOR_BGR2RGB)
    pil_image = PILImage.fromarray(frame_with_results)

    # Display the image
    display(pil_image)

# Release the video capture object
cap.release()